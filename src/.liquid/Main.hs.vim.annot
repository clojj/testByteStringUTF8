14:34-14:36::Main.$fEqPos :: "(GHC.Classes.Eq Main.Pos)"
14:38-14:42::Main.$fShowPos :: "(GHC.Show.Show Main.Pos)"
25:1-25:5:::Main.main :: "(GHC.Types.IO ())"
26:7-26:14::content :: "Data.ByteString.Internal.ByteString"
26:17-26:27::Data.ByteString.UTF8.fromString :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
26:30-26:37::_ :: "{v : [[GHC.Types.Char]] -> [GHC.Types.Char] | v == Data.OldList.unlines}"
27:18-27:36::lq_anf$##1677728971 :: "[GHC.Types.Char]"
28:18-28:30::lq_anf$##1677728973 :: "[GHC.Types.Char]"
29:18-29:36::lq_anf$##1677728975 :: "[GHC.Types.Char]"
30:18-30:37::lq_anf$##1677728977 :: "[GHC.Types.Char]"
31:18-31:28::lq_anf$##1677728979 :: "[GHC.Types.Char]"
32:18-32:32::lq_anf$##1677728981 :: "[GHC.Types.Char]"
34:7-34:13::tokens :: "{v : [((Main.Pos, Main.Pos), [GHC.Types.Char])] | null v <=> false}"
35:11-35:14::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
35:20-35:23::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
35:30-35:39::lq_anf$##1677728912 :: "[GHC.Types.Char]"
36:11-36:14::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
36:20-36:23::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
36:30-36:41::lq_anf$##1677728922 :: "[GHC.Types.Char]"
37:11-37:14::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
37:20-37:23::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
37:31-37:45::lq_anf$##1677728932 :: "[GHC.Types.Char]"
38:11-38:14::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
38:20-38:23::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
38:30-38:44::lq_anf$##1677728942 :: "[GHC.Types.Char]"
39:11-39:14::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
39:20-39:23::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
39:30-39:44::lq_anf$##1677728952 :: "[GHC.Types.Char]"
40:11-40:14::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
40:20-40:23::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
40:31-40:43::lq_anf$##1677728962 :: "[GHC.Types.Char]"
42:7-42:20::expectedLines :: "[GHC.Types.Char]"
52:5-52:6::r :: "Data.ByteString.Internal.ByteString"
52:10-52:18::Main.loopOver :: "Data.ByteString.Internal.ByteString -> [((Main.Pos, Main.Pos), [GHC.Types.Char])] -> (Main.Pos, Data.ByteString.Internal.ByteString) -> (GHC.Types.IO Data.ByteString.Internal.ByteString)"
52:35-52:38::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
52:44-52:50::lq_anf$##1677728993 :: "Data.ByteString.Internal.ByteString"
53:9-53:21::resultString :: "[GHC.Types.Char]"
53:24-53:32::_ :: "{v : Data.ByteString.Internal.ByteString -> [GHC.Types.Char] | v == Data.ByteString.UTF8.toString}"
54:5-54:13::_ :: "{v : [GHC.Types.Char] -> (GHC.Types.IO ()) | v == System.IO.putStrLn}"
55:5-55:13::_ :: "{v : [GHC.Types.Char] -> (GHC.Types.IO ()) | v == System.IO.putStrLn}"
56:5-56:10::lq_anf$##1677728997 :: "[GHC.Types.Char] -> (GHC.Types.IO ())"
56:13-56:17::_ :: "GHC.Types.Bool -> [GHC.Types.Char]"
56:19-56:48::lq_anf$##1677728998 :: "{v : GHC.Types.Bool | Prop v <=> expectedLines == resultString}"
56:33-56:35::_ :: "x1:[GHC.Types.Char] -> x2:[GHC.Types.Char] -> {v : GHC.Types.Bool | Prop v <=> x1 == x2}"
59:1-59:9::Main.loopOver :: "Data.ByteString.Internal.ByteString -> [((Main.Pos, Main.Pos), [GHC.Types.Char])] -> (Main.Pos, Data.ByteString.Internal.ByteString) -> (GHC.Types.IO Data.ByteString.Internal.ByteString)"
59:10-59:12::bs :: "Data.ByteString.Internal.ByteString"
59:13-59:19::tokens :: "[((Main.Pos, Main.Pos), [GHC.Types.Char])]"
62:11-62:17::_ :: "a -> (GHC.Types.IO a)"
62:20-62:80::lq_anf$##1677728870 :: "Data.ByteString.Internal.ByteString"
62:27-62:29::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
62:30-62:80::lq_anf$##1677728869 :: "Data.ByteString.Internal.ByteString"
62:38-62:40::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
62:41-62:51::_ :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
62:52-62:56::lq_anf$##1677728864 :: "[GHC.Types.Char]"
62:57-62:59::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
62:60-62:80::lq_anf$##1677728867 :: "Data.ByteString.Internal.ByteString"
62:64-62:66::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
62:67-62:80::lq_anf$##1677728866 :: "Data.ByteString.Internal.ByteString"
62:70-62:72::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
67:10-67:28::lq_anf$##1677728875 :: "GHC.Types.Bool"
67:21-67:23::Main.$fEqPos :: "(GHC.Classes.Eq Main.Pos)"
68:12-68:24::lq_anf$##1677728887 :: "GHC.Types.Bool"
68:17-68:19::Main.$fEqPos :: "(GHC.Classes.Eq Main.Pos)"
69:11-69:19::Main.loopOver :: "Data.ByteString.Internal.ByteString -> [((Main.Pos, Main.Pos), [GHC.Types.Char])] -> (Main.Pos, Data.ByteString.Internal.ByteString) -> (GHC.Types.IO Data.ByteString.Internal.ByteString)"
69:34-69:37::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
69:45-69:93::lq_anf$##1677728901 :: "Data.ByteString.Internal.ByteString"
69:52-69:54::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
69:55-69:93::lq_anf$##1677728900 :: "Data.ByteString.Internal.ByteString"
69:63-69:65::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
69:66-69:76::_ :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
69:83-69:85::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
71:15-71:26::advancement :: "(GHC.Types.Int, GHC.Types.Int)"
71:33-71:55::_ :: "{v : Main.Pos -> Main.Pos -> (GHC.Types.Int, GHC.Types.Int) | v == Main.advanceLinesAndColumns}"
72:16-72:21::token :: "Data.ByteString.Internal.ByteString"
72:23-72:29::bsTail :: "Data.ByteString.Internal.ByteString"
72:33-72:48::_ :: "{v : (GHC.Types.Int, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString) | v == Main.spanAdvancement}"
74:14-74:22::Main.loopOver :: "Data.ByteString.Internal.ByteString -> [((Main.Pos, Main.Pos), [GHC.Types.Char])] -> (Main.Pos, Data.ByteString.Internal.ByteString) -> (GHC.Types.IO Data.ByteString.Internal.ByteString)"
74:41-74:44::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
74:52-74:116::lq_anf$##1677728895 :: "Data.ByteString.Internal.ByteString"
74:59-74:61::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
74:62-74:116::lq_anf$##1677728894 :: "Data.ByteString.Internal.ByteString"
74:70-74:72::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
74:73-74:83::_ :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
74:90-74:92::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
74:93-74:116::lq_anf$##1677728892 :: "Data.ByteString.Internal.ByteString"
74:97-74:99::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
74:100-74:116::lq_anf$##1677728891 :: "Data.ByteString.Internal.ByteString"
74:106-74:108::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
76:13-76:24::advancement :: "(GHC.Types.Int, GHC.Types.Int)"
76:28-76:50::_ :: "{v : Main.Pos -> Main.Pos -> (GHC.Types.Int, GHC.Types.Int) | v == Main.advanceLinesAndColumns}"
77:14-77:16::ws :: "Data.ByteString.Internal.ByteString"
77:18-77:24::bsTail :: "Data.ByteString.Internal.ByteString"
77:28-77:43::_ :: "{v : (GHC.Types.Int, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString) | v == Main.spanAdvancement}"
79:12-79:20::Main.loopOver :: "Data.ByteString.Internal.ByteString -> [((Main.Pos, Main.Pos), [GHC.Types.Char])] -> (Main.Pos, Data.ByteString.Internal.ByteString) -> (GHC.Types.IO Data.ByteString.Internal.ByteString)"
79:36-79:39::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
79:47-79:107::lq_anf$##1677728885 :: "Data.ByteString.Internal.ByteString"
79:54-79:56::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
79:57-79:107::lq_anf$##1677728884 :: "Data.ByteString.Internal.ByteString"
79:65-79:67::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
79:68-79:78::_ :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
79:79-79:83::lq_anf$##1677728879 :: "[GHC.Types.Char]"
79:84-79:86::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
79:87-79:107::lq_anf$##1677728882 :: "Data.ByteString.Internal.ByteString"
79:91-79:93::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
79:94-79:107::lq_anf$##1677728881 :: "Data.ByteString.Internal.ByteString"
79:97-79:99::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
82:1-82:23::Main.advanceLinesAndColumns :: "Main.Pos -> Main.Pos -> (GHC.Types.Int, GHC.Types.Int)"
82:24-82:26::p1 :: "Main.Pos"
82:39-82:41::p2 :: "Main.Pos"
83:7-83:15::lq_anf$##1677728812 :: "GHC.Types.Bool"
83:10-83:12::Main.$fEqPos :: "(GHC.Classes.Eq Main.Pos)"
84:7-84:14::lq_anf$##1677728814 :: "{v : GHC.Types.Int | v == l2 - l1}"
84:10-84:11::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"
84:15-84:16::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 > x2}"
84:22-84:29::lq_anf$##1677728820 :: "{v : GHC.Types.Int | v == l2 - l1}"
84:25-84:26::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"
85:23-85:30::lq_anf$##1677728819 :: "{v : GHC.Types.Int | v == c2 - c1}"
85:26-85:27::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"
88:1-88:4::Main.sep :: "Data.ByteString.Internal.ByteString"
88:7-88:17::_ :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
88:18-88:23::lq_anf$##1677728789 :: "[GHC.Types.Char]"
91:1-91:8::Main.sepPart :: "Data.ByteString.Internal.ByteString"
91:11-91:21::_ :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
91:22-91:30::lq_anf$##1677728787 :: "[GHC.Types.Char]"
94:1-94:16::Main.spanAdvancement :: "(GHC.Types.Int, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString)"
94:24-94:26::bs :: "Data.ByteString.Internal.ByteString"
95:5-95:11::lq_anf$##1677728852 :: "GHC.Types.Bool"
95:7-95:9::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 == x2}"
95:14-95:21::_ :: "{v : GHC.Types.Int -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString) | v == Data.ByteString.UTF8.splitAt}"
98:5-98:10::lq_anf$##1677728855 :: "GHC.Types.Bool"
98:7-98:8::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 > x2}"
98:14-98:22::_ :: "{v : {v : (GHC.Types.Int, GHC.Types.Int) | fst v > 0} -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString) | v == Main.splitAt'}"
98:27-98:32::lq_anf$##1677728858 :: "GHC.Types.Int"
98:29-98:30::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"
106:1-106:9::Main.splitAt' :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v > 0} -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString)"
106:19-106:21::bs :: "Data.ByteString.Internal.ByteString"
106:24-106:28::_ :: "GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString)"
107:9-107:13::loop :: "(GHC.Classes.Eq a, GHC.Num.Num a) =>\nGHC.Types.Int -> (a, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString)"
107:14-107:15::a :: "GHC.Types.Int"
107:27-107:43::lq_anf$##1677728830 :: "GHC.Types.Bool"
107:34-107:36::_ :: "x1:(a, GHC.Types.Int) -> x2:(a, GHC.Types.Int) -> {v : GHC.Types.Bool | Prop v <=> x1 == x2}"
107:38-107:39::lq_anf$##1677728827 :: "a"
107:46-107:55::_ :: "{v : x1:GHC.Types.Int -> x2:Data.ByteString.Internal.ByteString -> ({v : Data.ByteString.Internal.ByteString | (x1 <= 0 <=> bslen v == 0)\n                                                                                                               && (0 <= x1\n                                                                                                                   && x1 <= bslen x2 <=> bslen v == x1)\n                                                                                                               && (bslen x2 <= x1 <=> bslen v == bslen x2)}, {v : Data.ByteString.Internal.ByteString | (x1 <= 0 <=> bslen v == bslen x2)\n                                                                                                                                                                                                        && (0 <= x1\n                                                                                                                                                                                                            && x1 <= bslen x2 <=> bslen v == bslen x2 - x1)\n                                                                                                                                                                                                        && (bslen x2 <= x1 <=> bslen v == 0)}) | v == Data.ByteString.splitAt}"
108:34-108:40::_ :: "{v : Data.ByteString.Internal.ByteString -> (GHC.Base.Maybe (GHC.Types.Char, GHC.Types.Int)) | v == Data.ByteString.UTF8.decode}"
110:51-110:55::loop :: "GHC.Types.Int -> (a, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString)"
110:57-110:60::lq_anf$##1677728842 :: "{v : GHC.Types.Int | v == a + y}"
110:58-110:59::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"
110:63-110:66::lq_anf$##1677728845 :: "a"
110:64-110:65::_ :: "x1:a -> x2:a -> {VV : a | VV == x1 - x2}"
110:65-110:66::lq_anf$##1677728844 :: "a"
110:73-110:79::_ :: "{v : x1:GHC.Types.Int -> x2:Data.ByteString.Internal.ByteString -> {v : Data.ByteString.Internal.ByteString | (x1 <= 0 <=> bslen v == bslen x2)\n                                                                                                              && (0 <= x1\n                                                                                                                  && x1 <= bslen x2 <=> bslen v == bslen x2 - x1)\n                                                                                                              && (bslen x2 <= x1 <=> bslen v == 0)} | v == Data.ByteString.drop}"
111:51-111:55::loop :: "GHC.Types.Int -> (a, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString)"
111:57-111:60::lq_anf$##1677728837 :: "{v : GHC.Types.Int | v == a + y}"
111:58-111:59::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"
111:66-111:69::lq_anf$##1677728839 :: "GHC.Types.Int"
111:67-111:68::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"
111:72-111:78::_ :: "{v : x1:GHC.Types.Int -> x2:Data.ByteString.Internal.ByteString -> {v : Data.ByteString.Internal.ByteString | (x1 <= 0 <=> bslen v == bslen x2)\n                                                                                                              && (0 <= x1\n                                                                                                                  && x1 <= bslen x2 <=> bslen v == bslen x2 - x1)\n                                                                                                              && (bslen x2 <= x1 <=> bslen v == 0)} | v == Data.ByteString.drop}"