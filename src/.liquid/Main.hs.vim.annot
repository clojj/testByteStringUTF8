15:34-15:36::Main.$fEqPos :: "(GHC.Classes.Eq Main.Pos)"
15:38-15:42::Main.$fShowPos :: "(GHC.Show.Show Main.Pos)"
26:1-26:5:::Main.main :: "(GHC.Types.IO ())"
27:7-27:14::content :: "Data.ByteString.Internal.ByteString"
27:17-27:27::Data.ByteString.UTF8.fromString :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
27:30-27:37::_ :: "{v : [[GHC.Types.Char]] -> [GHC.Types.Char] | v == Data.OldList.unlines}"
28:18-28:36::lq_anf$##1677729006 :: "[GHC.Types.Char]"
29:18-29:30::lq_anf$##1677729008 :: "[GHC.Types.Char]"
30:18-30:36::lq_anf$##1677729010 :: "[GHC.Types.Char]"
31:18-31:37::lq_anf$##1677729012 :: "[GHC.Types.Char]"
32:18-32:28::lq_anf$##1677729014 :: "[GHC.Types.Char]"
33:18-33:32::lq_anf$##1677729016 :: "[GHC.Types.Char]"
35:7-35:13::tokens :: "(Data.String.IsString a) => [((Main.Pos, Main.Pos), a)]"
36:11-36:14::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
36:20-36:23::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
36:30-36:39::lq_anf$##1677728942 :: "a"
37:11-37:14::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
37:20-37:23::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
37:30-37:41::lq_anf$##1677728953 :: "a"
38:11-38:14::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
38:20-38:23::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
38:31-38:45::lq_anf$##1677728964 :: "a"
39:11-39:14::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
39:20-39:23::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
39:30-39:44::lq_anf$##1677728975 :: "a"
40:11-40:14::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
40:20-40:23::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
40:30-40:44::lq_anf$##1677728986 :: "a"
41:11-41:14::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
41:20-41:23::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
41:31-41:43::lq_anf$##1677728997 :: "a"
43:7-43:20::expectedLines :: "(Data.String.IsString a) => a"
53:5-53:6::r :: "Data.ByteString.Internal.ByteString"
53:10-53:18::Main.loopOver :: "Data.ByteString.Internal.ByteString -> [((Main.Pos, Main.Pos), [GHC.Types.Char])] -> (Main.Pos, Data.ByteString.Internal.ByteString) -> (GHC.Types.IO Data.ByteString.Internal.ByteString)"
53:27-53:33::lq_anf$##1677729025 :: "[((Main.Pos, Main.Pos), [GHC.Types.Char])]"
53:35-53:38::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
53:44-53:50::lq_anf$##1677729029 :: "Data.ByteString.Internal.ByteString"
54:9-54:21::resultString :: "[GHC.Types.Char]"
54:24-54:32::_ :: "{v : Data.ByteString.Internal.ByteString -> [GHC.Types.Char] | v == Data.ByteString.UTF8.toString}"
55:5-55:13::_ :: "{v : [GHC.Types.Char] -> (GHC.Types.IO ()) | v == System.IO.putStrLn}"
56:5-56:13::_ :: "{v : [GHC.Types.Char] -> (GHC.Types.IO ()) | v == System.IO.putStrLn}"
56:14-56:27::lq_anf$##1677729032 :: "[GHC.Types.Char]"
57:5-57:10::lq_anf$##1677729034 :: "[GHC.Types.Char] -> (GHC.Types.IO ())"
57:13-57:17::_ :: "GHC.Types.Bool -> [GHC.Types.Char]"
57:19-57:32::lq_anf$##1677729035 :: "[GHC.Types.Char]"
57:33-57:35::_ :: "x1:[GHC.Types.Char] -> x2:[GHC.Types.Char] -> {v : GHC.Types.Bool | Prop v <=> x1 == x2}"
60:1-60:9::Main.loopOver :: "Data.ByteString.Internal.ByteString -> [((Main.Pos, Main.Pos), [GHC.Types.Char])] -> (Main.Pos, Data.ByteString.Internal.ByteString) -> (GHC.Types.IO Data.ByteString.Internal.ByteString)"
60:10-60:12::bs :: "Data.ByteString.Internal.ByteString"
60:13-60:19::tokens :: "[((Main.Pos, Main.Pos), [GHC.Types.Char])]"
63:11-63:17::_ :: "a -> (GHC.Types.IO a)"
63:20-63:80::lq_anf$##1677728898 :: "Data.ByteString.Internal.ByteString"
63:27-63:29::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
63:30-63:80::lq_anf$##1677728897 :: "Data.ByteString.Internal.ByteString"
63:38-63:40::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
63:41-63:51::_ :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
63:52-63:56::lq_anf$##1677728892 :: "[GHC.Types.Char]"
63:57-63:59::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
63:60-63:80::lq_anf$##1677728895 :: "Data.ByteString.Internal.ByteString"
63:64-63:66::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
63:67-63:80::lq_anf$##1677728894 :: "Data.ByteString.Internal.ByteString"
63:70-63:72::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
68:10-68:28::lq_anf$##1677728903 :: "GHC.Types.Bool"
68:21-68:23::Main.$fEqPos :: "(GHC.Classes.Eq Main.Pos)"
69:12-69:24::lq_anf$##1677728915 :: "GHC.Types.Bool"
69:17-69:19::Main.$fEqPos :: "(GHC.Classes.Eq Main.Pos)"
70:11-70:19::Main.loopOver :: "Data.ByteString.Internal.ByteString -> [((Main.Pos, Main.Pos), [GHC.Types.Char])] -> (Main.Pos, Data.ByteString.Internal.ByteString) -> (GHC.Types.IO Data.ByteString.Internal.ByteString)"
70:34-70:37::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
70:45-70:93::lq_anf$##1677728929 :: "Data.ByteString.Internal.ByteString"
70:52-70:54::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
70:55-70:93::lq_anf$##1677728928 :: "Data.ByteString.Internal.ByteString"
70:63-70:65::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
70:66-70:76::_ :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
70:83-70:85::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
72:15-72:26::advancement :: "(GHC.Types.Int, GHC.Types.Int)"
72:33-72:55::_ :: "{v : Main.Pos -> Main.Pos -> (GHC.Types.Int, GHC.Types.Int) | v == Main.advanceLinesAndColumns}"
73:16-73:21::token :: "Data.ByteString.Internal.ByteString"
73:23-73:29::bsTail :: "Data.ByteString.Internal.ByteString"
73:33-73:48::_ :: "{v : (GHC.Types.Int, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString) | v == Main.spanAdvancement}"
75:14-75:22::Main.loopOver :: "Data.ByteString.Internal.ByteString -> [((Main.Pos, Main.Pos), [GHC.Types.Char])] -> (Main.Pos, Data.ByteString.Internal.ByteString) -> (GHC.Types.IO Data.ByteString.Internal.ByteString)"
75:41-75:44::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
75:52-75:116::lq_anf$##1677728923 :: "Data.ByteString.Internal.ByteString"
75:59-75:61::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
75:62-75:116::lq_anf$##1677728922 :: "Data.ByteString.Internal.ByteString"
75:70-75:72::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
75:73-75:83::_ :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
75:90-75:92::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
75:93-75:116::lq_anf$##1677728920 :: "Data.ByteString.Internal.ByteString"
75:97-75:99::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
75:100-75:116::lq_anf$##1677728919 :: "Data.ByteString.Internal.ByteString"
75:106-75:108::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
77:13-77:24::advancement :: "(GHC.Types.Int, GHC.Types.Int)"
77:28-77:50::_ :: "{v : Main.Pos -> Main.Pos -> (GHC.Types.Int, GHC.Types.Int) | v == Main.advanceLinesAndColumns}"
78:14-78:16::ws :: "Data.ByteString.Internal.ByteString"
78:18-78:24::bsTail :: "Data.ByteString.Internal.ByteString"
78:28-78:43::_ :: "{v : (GHC.Types.Int, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString) | v == Main.spanAdvancement}"
80:12-80:20::Main.loopOver :: "Data.ByteString.Internal.ByteString -> [((Main.Pos, Main.Pos), [GHC.Types.Char])] -> (Main.Pos, Data.ByteString.Internal.ByteString) -> (GHC.Types.IO Data.ByteString.Internal.ByteString)"
80:36-80:39::_ :: "{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : Main.Pos | v == Main.Pos x1 x2} | v == Main.Pos}"
80:47-80:107::lq_anf$##1677728913 :: "Data.ByteString.Internal.ByteString"
80:54-80:56::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
80:57-80:107::lq_anf$##1677728912 :: "Data.ByteString.Internal.ByteString"
80:65-80:67::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
80:68-80:78::_ :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
80:79-80:83::lq_anf$##1677728907 :: "[GHC.Types.Char]"
80:84-80:86::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
80:87-80:107::lq_anf$##1677728910 :: "Data.ByteString.Internal.ByteString"
80:91-80:93::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
80:94-80:107::lq_anf$##1677728909 :: "Data.ByteString.Internal.ByteString"
80:97-80:99::_ :: "Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString -> Data.ByteString.Internal.ByteString"
83:1-83:23::Main.advanceLinesAndColumns :: "Main.Pos -> Main.Pos -> (GHC.Types.Int, GHC.Types.Int)"
83:24-83:26::p1 :: "Main.Pos"
83:39-83:41::p2 :: "Main.Pos"
84:7-84:15::lq_anf$##1677728840 :: "GHC.Types.Bool"
84:10-84:12::Main.$fEqPos :: "(GHC.Classes.Eq Main.Pos)"
85:7-85:14::lq_anf$##1677728842 :: "{v : GHC.Types.Int | v == l2 - l1}"
85:10-85:11::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"
85:15-85:16::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 > x2}"
85:22-85:29::lq_anf$##1677728848 :: "{v : GHC.Types.Int | v == l2 - l1}"
85:25-85:26::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"
86:23-86:30::lq_anf$##1677728847 :: "{v : GHC.Types.Int | v == c2 - c1}"
86:26-86:27::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"
89:1-89:4::Main.sep :: "Data.ByteString.Internal.ByteString"
89:7-89:17::_ :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
89:18-89:23::lq_anf$##1677728817 :: "[GHC.Types.Char]"
92:1-92:8::Main.sepPart :: "Data.ByteString.Internal.ByteString"
92:11-92:21::_ :: "{v : [GHC.Types.Char] -> Data.ByteString.Internal.ByteString | v == Data.ByteString.UTF8.fromString}"
92:22-92:30::lq_anf$##1677728815 :: "[GHC.Types.Char]"
95:1-95:16::Main.spanAdvancement :: "(GHC.Types.Int, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString)"
95:24-95:26::bs :: "Data.ByteString.Internal.ByteString"
96:5-96:11::lq_anf$##1677728880 :: "GHC.Types.Bool"
96:7-96:9::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 == x2}"
96:14-96:21::_ :: "{v : GHC.Types.Int -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString) | v == Data.ByteString.UTF8.splitAt}"
99:5-99:10::lq_anf$##1677728883 :: "GHC.Types.Bool"
99:7-99:8::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 > x2}"
99:14-99:22::_ :: "{v : {v : (GHC.Types.Int, GHC.Types.Int) | fst v > 0} -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString) | v == Main.splitAt'}"
99:27-99:32::lq_anf$##1677728886 :: "GHC.Types.Int"
99:29-99:30::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"
107:1-107:9::Main.splitAt' :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v > 0} -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString)"
107:19-107:21::bs :: "Data.ByteString.Internal.ByteString"
107:24-107:28::_ :: "GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString)"
108:9-108:13::loop :: "(GHC.Classes.Eq a, GHC.Num.Num a) =>\nGHC.Types.Int -> (a, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString)"
108:14-108:15::a :: "GHC.Types.Int"
108:27-108:43::lq_anf$##1677728858 :: "GHC.Types.Bool"
108:34-108:36::_ :: "x1:(a, GHC.Types.Int) -> x2:(a, GHC.Types.Int) -> {v : GHC.Types.Bool | Prop v <=> x1 == x2}"
108:38-108:39::lq_anf$##1677728855 :: "a"
108:46-108:55::_ :: "{v : x1:GHC.Types.Int -> x2:Data.ByteString.Internal.ByteString -> ({v : Data.ByteString.Internal.ByteString | (x1 <= 0 <=> bslen v == 0)\n                                                                                                               && (0 <= x1\n                                                                                                                   && x1 <= bslen x2 <=> bslen v == x1)\n                                                                                                               && (bslen x2 <= x1 <=> bslen v == bslen x2)}, {v : Data.ByteString.Internal.ByteString | (x1 <= 0 <=> bslen v == bslen x2)\n                                                                                                                                                                                                        && (0 <= x1\n                                                                                                                                                                                                            && x1 <= bslen x2 <=> bslen v == bslen x2 - x1)\n                                                                                                                                                                                                        && (bslen x2 <= x1 <=> bslen v == 0)}) | v == Data.ByteString.splitAt}"
109:34-109:40::_ :: "{v : Data.ByteString.Internal.ByteString -> (GHC.Base.Maybe (GHC.Types.Char, GHC.Types.Int)) | v == Data.ByteString.UTF8.decode}"
111:51-111:55::loop :: "GHC.Types.Int -> (a, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString)"
111:57-111:60::lq_anf$##1677728870 :: "{v : GHC.Types.Int | v == a + y}"
111:58-111:59::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"
111:63-111:66::lq_anf$##1677728873 :: "a"
111:64-111:65::_ :: "x1:a -> x2:a -> {VV : a | VV == x1 - x2}"
111:65-111:66::lq_anf$##1677728872 :: "a"
111:73-111:79::_ :: "{v : x1:GHC.Types.Int -> x2:Data.ByteString.Internal.ByteString -> {v : Data.ByteString.Internal.ByteString | (x1 <= 0 <=> bslen v == bslen x2)\n                                                                                                              && (0 <= x1\n                                                                                                                  && x1 <= bslen x2 <=> bslen v == bslen x2 - x1)\n                                                                                                              && (bslen x2 <= x1 <=> bslen v == 0)} | v == Data.ByteString.drop}"
112:51-112:55::loop :: "GHC.Types.Int -> (a, GHC.Types.Int) -> Data.ByteString.Internal.ByteString -> (Data.ByteString.Internal.ByteString, Data.ByteString.Internal.ByteString)"
112:57-112:60::lq_anf$##1677728865 :: "{v : GHC.Types.Int | v == a + y}"
112:58-112:59::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"
112:66-112:69::lq_anf$##1677728867 :: "GHC.Types.Int"
112:67-112:68::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"
112:72-112:78::_ :: "{v : x1:GHC.Types.Int -> x2:Data.ByteString.Internal.ByteString -> {v : Data.ByteString.Internal.ByteString | (x1 <= 0 <=> bslen v == bslen x2)\n                                                                                                              && (0 <= x1\n                                                                                                                  && x1 <= bslen x2 <=> bslen v == bslen x2 - x1)\n                                                                                                              && (bslen x2 <= x1 <=> bslen v == 0)} | v == Data.ByteString.drop}"